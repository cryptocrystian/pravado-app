{"version":3,"file":"handler.js","sources":["../../src/handler.ts"],"sourcesContent":["import type {\n  ExportedHandler,\n  ExportedHandlerFetchHandler,\n  ExportedHandlerScheduledHandler,\n} from '@cloudflare/workers-types';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  flush,\n  startSpan,\n  withIsolationScope,\n} from '@sentry/core';\nimport { setAsyncLocalStorageAsyncContextStrategy } from './async';\nimport type { CloudflareOptions } from './client';\nimport { wrapRequestHandler } from './request';\nimport { addCloudResourceContext } from './scope-utils';\nimport { init } from './sdk';\n\n/**\n * Extract environment generic from exported handler.\n */\ntype ExtractEnv<P> = P extends ExportedHandler<infer Env> ? Env : never;\n\n/**\n * Wrapper for Cloudflare handlers.\n *\n * Initializes the SDK and wraps the handler with Sentry instrumentation.\n *\n * Automatically instruments the `fetch` method of the handler.\n *\n * @param optionsCallback Function that returns the options for the SDK initialization.\n * @param handler {ExportedHandler} The handler to wrap.\n * @returns The wrapped handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withSentry<E extends ExportedHandler<any>>(\n  optionsCallback: (env: ExtractEnv<E>) => CloudflareOptions,\n  handler: E,\n): E {\n  setAsyncLocalStorageAsyncContextStrategy();\n\n  if ('fetch' in handler && typeof handler.fetch === 'function' && !isInstrumented(handler.fetch)) {\n    handler.fetch = new Proxy(handler.fetch, {\n      apply(target, thisArg, args: Parameters<ExportedHandlerFetchHandler<ExtractEnv<E>>>) {\n        const [request, env, context] = args;\n        const options = optionsCallback(env);\n        return wrapRequestHandler({ options, request, context }, () => target.apply(thisArg, args));\n      },\n    });\n\n    markAsInstrumented(handler.fetch);\n  }\n\n  if ('scheduled' in handler && typeof handler.scheduled === 'function' && !isInstrumented(handler.scheduled)) {\n    handler.scheduled = new Proxy(handler.scheduled, {\n      apply(target, thisArg, args: Parameters<ExportedHandlerScheduledHandler<ExtractEnv<E>>>) {\n        const [event, env, context] = args;\n        return withIsolationScope(isolationScope => {\n          const options = optionsCallback(env);\n          const client = init(options);\n          isolationScope.setClient(client);\n\n          addCloudResourceContext(isolationScope);\n\n          return startSpan(\n            {\n              op: 'faas.cron',\n              name: `Scheduled Cron ${event.cron}`,\n              attributes: {\n                'faas.cron': event.cron,\n                'faas.time': new Date(event.scheduledTime).toISOString(),\n                'faas.trigger': 'timer',\n                [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.faas.cloudflare',\n                [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'task',\n              },\n            },\n            async () => {\n              try {\n                return await (target.apply(thisArg, args) as ReturnType<typeof target>);\n              } catch (e) {\n                captureException(e, { mechanism: { handled: false, type: 'cloudflare' } });\n                throw e;\n              } finally {\n                context.waitUntil(flush(2000));\n              }\n            },\n          );\n        });\n      },\n    });\n\n    markAsInstrumented(handler.scheduled);\n  }\n\n  return handler;\n}\n\ntype SentryInstrumented<T> = T & {\n  __SENTRY_INSTRUMENTED__?: boolean;\n};\n\nfunction markAsInstrumented<T>(handler: T): void {\n  try {\n    (handler as SentryInstrumented<T>).__SENTRY_INSTRUMENTED__ = true;\n  } catch {\n    // ignore errors here\n  }\n}\n\nfunction isInstrumented<T>(handler: T): boolean | undefined {\n  try {\n    return (handler as SentryInstrumented<T>).__SENTRY_INSTRUMENTED__;\n  } catch {\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}