import { ExportedHandler } from '@cloudflare/workers-types';
import { CloudflareOptions } from './client';
/**
 * Extract environment generic from exported handler.
 */
type ExtractEnv<P> = P extends ExportedHandler<infer Env> ? Env : never;
/**
 * Wrapper for Cloudflare handlers.
 *
 * Initializes the SDK and wraps the handler with Sentry instrumentation.
 *
 * Automatically instruments the `fetch` method of the handler.
 *
 * @param optionsCallback Function that returns the options for the SDK initialization.
 * @param handler {ExportedHandler} The handler to wrap.
 * @returns The wrapped handler.
 */
export declare function withSentry<E extends ExportedHandler<any>>(optionsCallback: (env: ExtractEnv<E>) => CloudflareOptions, handler: E): E;
export {};
//# sourceMappingURL=handler.d.ts.map
